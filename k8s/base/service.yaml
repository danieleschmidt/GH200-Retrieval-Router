apiVersion: v1
kind: Service
metadata:
  name: gh200-retrieval-router
  namespace: gh200-system
  labels:
    app.kubernetes.io/name: gh200-retrieval-router
    app.kubernetes.io/component: application
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: gh200-retrieval-router
    app.kubernetes.io/component: application
  ports:
  - name: http
    port: 8080
    targetPort: http
    protocol: TCP
  - name: websocket
    port: 8081
    targetPort: websocket
    protocol: TCP
  sessionAffinity: None
---
apiVersion: v1
kind: Service
metadata:
  name: gh200-retrieval-router-headless
  namespace: gh200-system
  labels:
    app.kubernetes.io/name: gh200-retrieval-router
    app.kubernetes.io/component: application
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app.kubernetes.io/name: gh200-retrieval-router
    app.kubernetes.io/component: application
  ports:
  - name: http
    port: 8080
    targetPort: http
    protocol: TCP
  - name: websocket
    port: 8081
    targetPort: websocket
    protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: gh200-load-balancer
  namespace: gh200-system
  labels:
    app.kubernetes.io/name: gh200-retrieval-router
    app.kubernetes.io/component: load-balancer
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "external"
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval-seconds: "10"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-timeout-seconds: "6"
    service.beta.kubernetes.io/aws-load-balancer-healthy-threshold-count: "2"
    service.beta.kubernetes.io/aws-load-balancer-unhealthy-threshold-count: "2"
spec:
  type: LoadBalancer
  selector:
    app.kubernetes.io/name: nginx-ingress
  ports:
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP
  - name: https
    port: 443
    targetPort: 443
    protocol: TCP
  loadBalancerSourceRanges:
  - 0.0.0.0/0